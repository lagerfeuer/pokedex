{"version":3,"sources":["img/logo.svg","components/NavBar/NavBar.js","components/NavBar/index.js","utils/index.js","components/Card/Card.js","components/Card/index.js","components/Spinner/Spinner.js","components/Spinner/index.js","components/CardGrid/CardGrid.js","components/CardGrid/index.js","config.js","utils/fetch.js","components/Pokemon/Pokemon.js","components/Pokemon/index.js","App.js","index.js"],"names":["NavBar","onQueryChange","Navbar","expand","Brand","href","alt","src","logo","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","FormControl","type","placeholder","onChange","e","target","value","formatName","name","replace","letter","toUpperCase","gender","endsWith","icon","faMars","faVenus","findLanguage","languages","lang","l","language","Card","item","Col","Img","variant","sprites","other","front_default","Body","Title","Subtitle","Spinner","CardGrid","isLoading","items","query","Container","Row","filter","startsWith","map","to","style","cursor","BaseURL","PokemonURL","store","localforage","createInstance","driver","INDEXEDDB","WEBSQL","LOCALSTORAGE","api","setup","cache","maxAge","fetchAllPokemon","like","a","regex","RegExp","get","initial","data","count","_list","Promise","all","results","test","pokemon","url","result","_pokemon","fetchPokemon","abilities","ability","tmp","moves","move","stats","stat","base_stat","types","Pokemon","useState","setPokemon","loading","setLoading","useEffect","unmounted","_fetch","t","Badge","names","Image","thumbnail","Table","hover","bordered","effect_entries","short_effect","m","OverlayTrigger","placement","overlay","Tooltip","flavor_text_entries","flavor_text","margin","App","setQuery","PokemonWrapper","useParams","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,MAA0B,iC,MCuC1BA,ICrCAA,EDIf,YAAoC,IAAlBC,EAAiB,EAAjBA,cAChB,OACE,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAf,UACE,eAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,IAAnB,UACE,qBACEC,IAAI,GACJC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IAPL,gBAUA,cAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,eAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,mBAApB,UACE,eAACC,EAAA,EAAD,CAAKL,UAAU,UAAf,UACE,cAACK,EAAA,EAAIC,KAAL,CAAUZ,KAAK,WAAf,qBACA,cAACW,EAAA,EAAIC,KAAL,CAAUZ,KAAK,SAAf,sBAEF,cAACa,EAAA,EAAD,CAAMC,QAAM,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,SACZX,UAAU,UACVY,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOC,mB,mEE3B7C,SAASC,EAAWC,GACzB,OAAOA,EACJC,QAAQ,OAAO,SAACC,GAAD,OAAYA,EAAOC,iBAClCF,QAAQ,SAAU,IAGhB,SAASG,EAAOJ,GACrB,OAAIA,EAAKK,SAAS,MAAc,cAAC,IAAD,CAAiBC,KAAMC,MACnDP,EAAKK,SAAS,MAAc,cAAC,IAAD,CAAiBC,KAAME,MAChD,KAGF,SAASC,EAAaC,GAAuB,IAAD,EAAXC,EAAW,uDAAN,KAAM,cACjCD,GADiC,IACjD,gCAAWE,EAAX,QAA2B,GAAIA,EAAEC,SAASb,OAASW,EAAM,OAAOC,GADf,+BCYpCE,IC1BAA,EDIf,YAAyB,IAATC,EAAQ,EAARA,KACRf,EAAOD,EAAWgB,EAAKf,MAC7B,OACE,cAACgB,EAAA,EAAD,CAAKjC,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAMkC,IAAP,CACEC,QAAQ,MACRvC,IAAKoC,EAAKI,QAAQC,MAAM,oBAAoBC,gBAE9C,eAAC,IAAMC,KAAP,WACE,eAAC,IAAMC,MAAP,WACGvB,EADH,IACUI,EAAOW,EAAKf,SAEtB,eAAC,IAAMwB,SAAP,eAAkBT,EAAK5B,iB,MEApBsC,IClBAA,EDEf,WACE,OACE,sBAAK1C,UAAU,WAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BEUS2C,ICvBAA,EDKf,YAAgD,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACpC,OAAOF,EACL,cAAC,EAAD,IAEA,cAACG,EAAA,EAAD,CAAW/C,UAAU,YAArB,SACE,cAACgD,EAAA,EAAD,UACGH,EACEI,QAAO,SAACjB,GAAD,OAAUA,EAAKf,KAAKiC,WAAWJ,MACtCK,KAAI,SAACnB,GAAD,OACH,cAAC,IAAD,CAAMoB,GAAE,WAAMpB,EAAK5B,IAAnB,SACE,cAAC,EAAD,CAAoB4B,KAAMA,EAAMqB,MAAO,CAAEC,OAAQ,YAAtCtB,EAAK5B,c,6DEhBjBmD,EAAU,4BACVC,EAAU,UAAMD,EAAN,Y,GACF,UAAMA,EAAN,U,gBCGfE,EAAQC,IAAYC,eAAe,CACvCC,OAAQ,CAACF,IAAYG,UAAWH,IAAYI,OAAQJ,IAAYK,cAChE9C,KAAM,uBAGF+C,EAAMC,gBAAM,CAChBC,MAAO,CACLC,OAAQ,OACRV,MAAOA,KAIJ,SAAeW,EAAtB,kC,4CAAO,WAA+BC,GAA/B,qBAAAC,EAAA,6DACCC,EAAiB,OAATF,EAAgB,IAAIG,OAAOH,GAAQ,IAAIG,OAAO,IADvD,SAGiBR,EAAIS,IAAIjB,GAHzB,cAGCkB,EAHD,gBAIeV,EAAIS,IAAIjB,EAAU,iBAAakB,EAAQC,KAAKC,QAJ3D,cAICC,EAJD,gBAMkBC,QAAQC,IAC7BF,EAAMF,KAAKK,QACR/B,QAAO,SAACpC,GAAD,OAAO0D,EAAMU,KAAKpE,EAAEI,SAC3BkC,IAFH,uCAEO,WAAO+B,GAAP,eAAAZ,EAAA,+EAEoBN,EAAIS,IAAIS,EAAQC,KAFpC,cAEKC,EAFL,yBAGMA,EAAOT,MAHb,yDAKM,MALN,yDAFP,wDAPG,cAMCU,EAND,yBAkBEA,EAASpC,QAAO,SAACpC,GAAD,OAAa,OAANA,MAlBzB,6C,sBAqBA,SAAeyE,EAAtB,kC,4CAAO,WAA4BlF,GAA5B,yBAAAkE,EAAA,sEACgBN,EAAIS,IAAIjB,EAAU,WAAOpD,IADzC,cACCgF,EADD,OAEDF,EAAUE,EAAOT,KAFhB,SAImBG,QAAQC,IAC9BG,EAAQK,UAAUpC,IAAlB,uCAAsB,WAAOqC,GAAP,eAAAlB,EAAA,sEACFN,EAAIS,IAAIe,EAAQA,QAAQL,KADtB,cACdM,EADc,yBAEbA,EAAId,MAFS,2CAAtB,wDALG,cAICY,EAJD,OAULL,EAAQK,UAAYA,EAVf,UAYeT,QAAQC,IAC1BG,EAAQQ,MAAMvC,IAAd,uCAAkB,WAAOwC,GAAP,eAAArB,EAAA,sEACEN,EAAIS,IAAIkB,EAAKA,KAAKR,KADpB,cACVM,EADU,yBAETA,EAAId,MAFK,2CAAlB,wDAbG,eAYCe,EAZD,OAkBLR,EAAQQ,MAAQA,EAlBX,UAoBeZ,QAAQC,IAC1BG,EAAQU,MAAMzC,IAAd,uCAAkB,WAAO0C,GAAP,eAAAvB,EAAA,sEACEN,EAAIS,IAAIoB,EAAKA,KAAKV,KADpB,cACVM,EADU,QAEZd,KAAKmB,UAAYD,EAAKC,UAFV,kBAGTL,EAAId,MAHK,2CAAlB,wDArBG,eAoBCiB,EApBD,OA2BLV,EAAQU,MAAQA,EA3BX,UA6Bed,QAAQC,IAC1BG,EAAQa,MAAM5C,IAAd,uCAAkB,WAAOzC,GAAP,eAAA4D,EAAA,sEACEN,EAAIS,IAAI/D,EAAKA,KAAKyE,KADpB,cACVM,EADU,yBAETA,EAAId,MAFK,2CAAlB,wDA9BG,eA6BCoB,EA7BD,OAmCLb,EAAQa,MAAQA,EAnCX,kBAqCEb,GArCF,6C,4BCqGQc,IC1IAA,EDmBf,YAA0B,IAAP5F,EAAM,EAANA,GAAM,EACO6F,mBAAS,IADhB,mBAChBf,EADgB,KACPgB,EADO,OAEOD,oBAAS,GAFhB,mBAEhBE,EAFgB,KAEPC,EAFO,KAoBvB,OAhBAC,qBAAU,WACR,IAAIC,GAAY,EAUhB,OAFKA,GANO,uCAAG,4BAAAhC,EAAA,sEACUgB,EAAalF,GADvB,OACPiF,EADO,OAEba,EAAWb,GACXe,GAAW,GAHE,2CAAH,oDAMIG,GAET,WACLD,GAAY,KAEb,IAEIH,EACL,cAAC,EAAD,IAEA,eAACpD,EAAA,EAAD,WACE,+BACG/B,EAAWkE,EAAQjE,MADtB,IAC8BI,EAAO6D,EAAQjE,MAAO,IACjDiE,EAAQa,MAAM5C,KAAI,SAACqD,GAClB,OACE,cAACC,EAAA,EAAD,CACEtE,QAAQ,UACRkB,MAAO,CAAE,eAAgB,QACzBrD,UAAWwG,EAAEvF,KAHf,SAKGS,EAAa8E,EAAEE,OAAOzF,aAK/B,sBAAKjB,UAAU,UAAf,UACE,eAACgD,EAAA,EAAD,WACE,cAACf,EAAA,EAAD,UACE,cAAC0E,EAAA,EAAD,CACE/G,IAAKsF,EAAQ9C,QAAQC,MAAM,oBAAoBC,cAC/CsE,WAAS,MAGb,cAAC3E,EAAA,EAAD,UACE,qBAAKjC,UAAU,QAAf,SACE,eAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAArB,UACE,gCACE,+BACE,sCACA,4CAGJ,gCACG7B,EAAQU,MAAMzC,KAAI,SAAC0C,GAClB,OACE,+BACE,6BAAKnE,EAAamE,EAAKa,OAAOzF,OAC9B,6BAAK4E,EAAKC,2BAQxB,cAAC7D,EAAA,EAAD,UACE,eAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAArB,UACE,gCACE,+BACE,yCACA,kDAGJ,gCACG7B,EAAQK,UAAUpC,KAAI,SAACmB,GACtB,OACE,+BACE,6BAAK5C,EAAa4C,EAAEoC,OAAOzF,OAC3B,6BAAKS,EAAa4C,EAAE0C,gBAAgBC,+BAQlD,cAACjE,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,WACE,uCACCiD,EAAQQ,MAAMvC,KAAI,SAAC+D,GAClB,OACE,cAACC,EAAA,EAAD,CAEEC,UAAU,MACVC,QACE,cAACC,EAAA,EAAD,CAASlH,GAAI8G,EAAE9G,GAAf,SACGsB,EAAawF,EAAEK,qBAAqBC,cAL3C,SASE,cAACf,EAAA,EAAD,CACEtE,QAAQ,OACRkB,MAAO,CAAEvD,MAAO,MAAO2H,OAAQ,SAFjC,SAIG/F,EAAawF,EAAER,OAAOzF,QAb3B,eACeiG,EAAE9G,oB,cEtDlBsH,MA9Cf,WAAgB,IAAD,EACiBzB,mBAAS,IAD1B,mBACNf,EADM,KACGgB,EADH,OAEiBD,oBAAS,GAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGaH,mBAAS,IAHtB,mBAGNnD,EAHM,KAGC6E,EAHD,KAwBb,SAASC,IAAkB,IACjBxH,EAAOyH,cAAPzH,GACR,OAAO,cAAC,EAAD,CAASA,GAAIA,IAGtB,OAxBAiG,qBACE,SAACvD,GACC,IAAIwD,GAAY,EAUhB,OAFKA,GANO,uCAAG,WAAOxD,GAAP,eAAAwB,EAAA,sEACUF,EAAgBtB,GAD1B,OACPuC,EADO,OAEba,EAAWb,EAASpC,QAAO,SAACpC,GAAD,OAAa,OAANA,MAClCuF,GAAW,GAHE,2CAAH,qDAMIG,GAET,WACLD,GAAY,KAGhB,CAACxD,IASD,cAAC,IAAD,CAAQgF,SAAS,UAAjB,SACE,sBAAK9H,UAAU,MAAf,UACE,cAAC,EAAD,CAAQV,cAAeqI,IACvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAUpF,UAAWuD,EAAStD,MAAOqC,EAASpC,MAAOA,MAEvD,cAAC,IAAD,CAAOkF,KAAK,OAAZ,SACE,cAACJ,EAAD,eChDZK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.62747db6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2db7de44.svg\";","import React from \"react\";\nimport { Navbar, Nav, Form, FormControl } from \"react-bootstrap\";\nimport logo from \"../../img/logo.svg\";\n\nimport \"./NavBar.scss\";\n\nfunction NavBar({ onQueryChange }) {\n  return (\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          src={logo}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Pok√©dex\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/berries\">Berries</Nav.Link>\n          <Nav.Link href=\"/types\">Types</Nav.Link>\n        </Nav>\n        <Form inline>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            onChange={(e) => onQueryChange(e.target.value)}\n          />\n          {/* <Button variant=\"outline-success\">Search</Button> */}\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import NavBar from './NavBar';\n\nexport default NavBar;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVenus, faMars } from \"@fortawesome/free-solid-svg-icons\";\n\nexport function formatName(name) {\n  return name\n    .replace(/^\\w/, (letter) => letter.toUpperCase())\n    .replace(/-[mf]$/, \"\");\n}\n\nexport function gender(name) {\n  if (name.endsWith(\"-m\")) return <FontAwesomeIcon icon={faMars} />;\n  if (name.endsWith(\"-f\")) return <FontAwesomeIcon icon={faVenus} />;\n  return null;\n}\n\nexport function findLanguage(languages, lang=\"en\") {\n  for (const l of languages) if (l.language.name === lang) return l;\n}\n","import React from \"react\";\nimport { Card as BCard, Col } from \"react-bootstrap\";\nimport \"./Card.scss\";\nimport { formatName, gender } from \"../../utils\";\n\nfunction Card({ item }) {\n  const name = formatName(item.name);\n  return (\n    <Col className=\"card-container\">\n      <div className=\"card-item\">\n        <BCard>\n          <BCard.Img\n            variant=\"top\"\n            src={item.sprites.other[\"official-artwork\"].front_default}\n          />\n          <BCard.Body>\n            <BCard.Title>\n              {name} {gender(item.name)}\n            </BCard.Title>\n            <BCard.Subtitle>#{item.id}</BCard.Subtitle>\n          </BCard.Body>\n        </BCard>\n      </div>\n    </Col>\n  );\n}\n\nexport default Card;\n","import Card from \"./Card\";\nexport default Card;\n","import React from \"react\";\nimport \"./Spinner.scss\";\n\nfunction Spinner() {\n  return (\n    <div className=\"lds-grid\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import Spinner from \"./Spinner\";\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Card from \"../Card\";\nimport Spinner from \"../Spinner\";\n\nfunction CardGrid({ isLoading, items, query }) {\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <Container className=\"card-grid\">\n      <Row>\n        {items\n          .filter((item) => item.name.startsWith(query))\n          .map((item) => (\n            <Link to={`/${item.id}`}>\n              <Card key={item.id} item={item} style={{ cursor: \"pointer\" }} />\n            </Link>\n          ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default CardGrid;\n","import CardGrid from './CardGrid';\nexport default CardGrid;","export const BaseURL = \"https://pokeapi.co/api/v2\";\nexport const PokemonURL = `${BaseURL}/pokemon`;\nexport const BerryURL = `${BaseURL}/berry`;\n","import axios from \"axios\";\nimport { setup } from \"axios-cache-adapter\";\nimport { BaseURL, PokemonURL } from \"../config\";\nimport localforage from \"localforage\";\n\nconst store = localforage.createInstance({\n  driver: [localforage.INDEXEDDB, localforage.WEBSQL, localforage.LOCALSTORAGE],\n  name: \"lagerfeuer-pokedex\"\n});\n\nconst api = setup({\n  cache: {\n    maxAge: 7 * 24 * 60 * 60 * 1000,\n    store: store\n  },\n});\n\nexport async function fetchAllPokemon(like) {\n  const regex = like !== null ? new RegExp(like) : new RegExp(\"\");\n\n  const initial = await api.get(PokemonURL); // first request contains count of all pokemon\n  const _list = await api.get(PokemonURL + `?limit=${initial.data.count}`);\n\n  const _pokemon = await Promise.all(\n    _list.data.results\n      .filter((e) => regex.test(e.name))\n      .map(async (pokemon) => {\n        try {\n          const result = await api.get(pokemon.url);\n          return result.data;\n        } catch (e) {\n          return null;\n        }\n      })\n  );\n  return _pokemon.filter((e) => e !== null);\n}\n\nexport async function fetchPokemon(id) {\n  const result = await api.get(PokemonURL + `/${id}`);\n  let pokemon = result.data;\n\n  const abilities = await Promise.all(\n    pokemon.abilities.map(async (ability) => {\n      const tmp = await api.get(ability.ability.url);\n      return tmp.data;\n    })\n  );\n  pokemon.abilities = abilities;\n\n  const moves = await Promise.all(\n    pokemon.moves.map(async (move) => {\n      const tmp = await api.get(move.move.url);\n      return tmp.data;\n    })\n  );\n  pokemon.moves = moves;\n\n  const stats = await Promise.all(\n    pokemon.stats.map(async (stat) => {\n      const tmp = await api.get(stat.stat.url);\n      tmp.data.base_stat = stat.base_stat;\n      return tmp.data;\n    })\n  );\n  pokemon.stats = stats;\n\n  const types = await Promise.all(\n    pokemon.types.map(async (type) => {\n      const tmp = await api.get(type.type.url);\n      return tmp.data;\n    })\n  );\n  pokemon.types = types;\n\n  return pokemon;\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  ProgressBar,\n  Table,\n  OverlayTrigger,\n  Tooltip,\n  Badge,\n} from \"react-bootstrap\";\nimport Spinner from \"../Spinner\";\nimport { formatName, gender, findLanguage } from \"../../utils\";\nimport { fetchPokemon } from \"../../utils/fetch\";\n\nimport \"./Pokemon.scss\";\n\n// TODO: send requests for stats and abilities, responses include the real display name\nfunction Pokemon({ id }) {\n  const [pokemon, setPokemon] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let unmounted = false;\n\n    const _fetch = async () => {\n      const _pokemon = await fetchPokemon(id);\n      setPokemon(_pokemon);\n      setLoading(false);\n    };\n\n    if (!unmounted) _fetch();\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Container>\n      <h1>\n        {formatName(pokemon.name)} {gender(pokemon.name)}{\" \"}\n        {pokemon.types.map((t) => {\n          return (\n            <Badge\n              variant=\"primary\"\n              style={{ \"margin-right\": \"10px\" }}\n              className={t.name}\n            >\n              {findLanguage(t.names).name}\n            </Badge>\n          );\n        })}\n      </h1>\n      <div className=\"details\">\n        <Row>\n          <Col>\n            <Image\n              src={pokemon.sprites.other[\"official-artwork\"].front_default}\n              thumbnail\n            />\n          </Col>\n          <Col>\n            <div className=\"stats\">\n              <Table hover bordered>\n                <thead>\n                  <tr>\n                    <th>Stat</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pokemon.stats.map((stat) => {\n                    return (\n                      <tr>\n                        <td>{findLanguage(stat.names).name}</td>\n                        <td>{stat.base_stat}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </Col>\n          <Col>\n            <Table hover bordered>\n              <thead>\n                <tr>\n                  <th>Ability</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pokemon.abilities.map((a) => {\n                  return (\n                    <tr>\n                      <td>{findLanguage(a.names).name}</td>\n                      <td>{findLanguage(a.effect_entries).short_effect}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h2>Moves</h2>\n            {pokemon.moves.map((m) => {\n              return (\n                <OverlayTrigger\n                  key={`move-${m.id}`}\n                  placement=\"top\"\n                  overlay={\n                    <Tooltip id={m.id}>\n                      {findLanguage(m.flavor_text_entries).flavor_text}\n                    </Tooltip>\n                  }\n                >\n                  <Badge\n                    variant=\"dark\"\n                    style={{ width: \"10%\", margin: \"0 5px\" }}\n                  >\n                    {findLanguage(m.names).name}\n                  </Badge>\n                </OverlayTrigger>\n              );\n            })}\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\nexport default Pokemon;\n","import Pokemon from \"./Pokemon\";\nexport default Pokemon;","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport CardGrid from \"./components/CardGrid\";\nimport Pokemon from \"./components/Pokemon\";\nimport { fetchAllPokemon } from \"./utils/fetch\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(\n    (query) => {\n      let unmounted = false;\n\n      const _fetch = async (query) => {\n        const _pokemon = await fetchAllPokemon(query);\n        setPokemon(_pokemon.filter((e) => e !== null));\n        setLoading(false);\n      };\n\n      if (!unmounted) _fetch();\n\n      return () => {\n        unmounted = true;\n      };\n    },\n    [query]\n  );\n\n  function PokemonWrapper() {\n    const { id } = useParams();\n    return <Pokemon id={id} />;\n  }\n\n  return (\n    <Router basename='pokedex'>\n      <div className=\"App\">\n        <NavBar onQueryChange={setQuery} />\n        <Switch>\n          <Route exact path=\"/\">\n            <CardGrid isLoading={loading} items={pokemon} query={query} />\n          </Route>\n          <Route path=\"/:id\">\n            <PokemonWrapper />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}